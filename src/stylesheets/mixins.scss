@import "./variables.json";
@import "./animations";

@mixin respond-to($breakpoint) {
  // Retrieves the value from the key
  $value: map-get($breakpoints, $breakpoint);

  // If the key exists in the map
  @if $value != null {
    // Prints a media query based on the value
    @media (min-width: $value) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin base-focus {
  box-sizing: border-box;
  border: 3px solid transparent;
  transition: border 0.2s ease-in-out;
  &:focus {
    outline: 0;
    border: 3px solid $accentColor;
  }
}

@mixin sidebar-nav-button {
  width: 100%;
  height: $sidebarClosedOffset;
  text-align: center;
  line-height: $sidebarClosedOffset - $inputBorderPadding * 2;
  transition: all 0.3s ease-in-out;
  i {
    color: white;
  }
  &:hover, &.active {
    background-color: $sidebarIconHoverColor;
    i {
      color: $blackBackground;
    }
  }
  &:focus {
    border: $inputBorderPadding solid $sidebarIconHoverColor;
  }
}
